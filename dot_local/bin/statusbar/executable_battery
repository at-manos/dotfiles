#!/bin/sh

# Prints all batteries, their percentage remaining and an emoji corresponding
# to charge status (🔌 for plugged up, 🔋 for discharging on battery, etc.).
NOTCHARGING=""
UNKNOWN=" "
CHARGING=" "
DISCHARGING=" "
CHARGED=" "
LOWBATT=" "



case $BLOCK_BUTTON in
	3) notify-send " Battery module" "$DISCHARGING : discharging
$NOTCHARGING: not charging
$UNKNOWN: stagnant charge
$CHARGING: charging
$CHARGED: charged
$LOWBATT: battery very low!" ;;
	6) "$TERMINAL" -e "$EDITOR" "$0" ;;
esac

# acpi alternative
# acpi | sed "s/Battery [0-9]: //;s/[Dd]ischarging, /🔋/;s/[Nn]ot charging, /🛑/;s/[Cc]harging, /🔌/;s/[Uu]nknown, /♻️/;s/[Ff]ull, /⚡/;s/ \(remaining\|until charged\)//"; exit

# Loop through all attached batteries.
for battery in /sys/class/power_supply/BAT?
do
	# Get its remaining capacity and charge status.
	capacity=$(cat "$battery"/capacity) || break
	status=$(sed "s/[Dd]ischarging/$DISCHARGING/;s/[Nn]ot charging/$DISCHARGING/;s/[Cc]harging/$CHARGING/;s/[Uu]nknown/$UNKNOWN/;s/[Ff]ull/$CHARGED/" "$battery"/status)

	# If it is discharging and 25% or less, we will add a ❗ as a warning.
	 [ "$capacity" -le 25 ] && [ "$status" = "$DISCHARGING" ] && warn="$NOTCHARGING"

	printf "%s %s%s%% " "$warn" "$status" "$capacity"
	unset warn
done | sed 's/ *$//'
